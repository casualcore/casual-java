/*
 * Copyright (c) 2017 - 2018, The casual project. All rights reserved.
 *
 * This software is licensed under the MIT license, https://opensource.org/licenses/MIT
 */

//-*- coding: utf-8 -*-
plugins {
    id 'java-library'
    id 'jacoco'
    id 'groovy'
}

defaultTasks 'build'

group = 'se.laz.casual'

configurations {
    resourceAdapter
    resourceAdapterLib
}

/**
 * To ensure good developer UX, published poms include required transitive
 * dependencies, though these do not need to be packaged into the
 * RAR as they are expected to be provided or included on the classpath.
 * The following removes these transitive dependencies from the RAR.
 * In the case of netty it is instead included in the RAR lib folder.
 */
configurations.resourceAdapter{
    exclude( group: 'io.netty' )
    exclude( group: 'se.laz.casual', module: 'casual-api')
    exclude( group: 'se.laz.casual', module: 'casual-inbound-handler-api')
}

dependencies {
    implementation project(':casual:casual-api')
    implementation project(':casual:casual-service-discovery-extension')
    implementation project(':casual:casual-inbound-api')
    implementation project(':casual:casual-network')
    implementation project(':casual:casual-network-protocol')
    implementation project(':casual:casual-event-api')
    implementation project(':casual:casual-event')
    implementation project(':casual:casual-event-server')
    implementation libs.netty
    compileOnly libs.javaee_api
    compileOnly libs.gson

    resourceAdapter( project(':casual:casual-network') )
    resourceAdapter project(':casual:casual-network-protocol')
    resourceAdapter (project(':casual:casual-event-server')){ transitive = false }
    //resourceAdapterLib (project(':casual:casual-inbound-api')) { transitive = false }
    //resourceAdapterLib (project(':casual:casual-event-api')){ transitive = false }
    resourceAdapterLib (project(':casual:casual-event')){ transitive = false }
    resourceAdapterLib libs.netty
    resourceAdapterLib libs.netty_epoll

    testImplementation libs.javaee_api
    testImplementation libs.hamcrest_all
    // for spock
    testImplementation platform(libs.groovy_bom)
    testImplementation libs.groovy
    testImplementation platform(libs.spock_bom)
    testImplementation libs.spock_core
    testImplementation libs.byte_buddy
    testImplementation libs.objenesis

}

task rar(type: Jar) {
    archiveFileName = "casual-jca.rar"
    manifest {
        attributes 'Implementation-Title': 'Casual Resource Adapter with XA', 'Implementation-Version': '1.0', 'Specification-Version': '1.0'
    }
    archiveExtension = 'rar'
    from(configurations.resourceAdapterLib){
	into('lib')
    }
    into('') {
        from jar
    }
    into('') {
        from configurations.resourceAdapter
    }
    into('') {
        from sourceSets.main.resources
    }

}

artifacts.add( "resourceAdapter", rar )
