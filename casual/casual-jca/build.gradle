/*
 * Copyright (c) 2017 - 2018, The casual project. All rights reserved.
 *
 * This software is licensed under the MIT license, https://opensource.org/licenses/MIT
 */

//-*- coding: utf-8 -*-
plugins {
    id 'java'
    id 'jacoco'
    id 'groovy'
}

defaultTasks 'build'

group = 'se.laz.casual'

configurations {
    resourceAdapter
    resourceAdapterLib
}

dependencies {
    implementation project(':casual:casual-api')
    implementation project(':casual:casual-service-discovery-extension')
    implementation project(':casual:casual-inbound-api')
    implementation project(':casual:casual-internal')
    implementation project(':casual:casual-network')
    implementation project(':casual:casual-network-protocol')
    implementation project(':casual:casual-inbound')
    compileOnly libs.netty
    compileOnly libs.javaee_api
    resourceAdapter project(':casual:casual-internal')
    resourceAdapter project(':casual:casual-network')
    resourceAdapter project(':casual:casual-network-protocol')
    resourceAdapter project(':casual:casual-inbound-api')
    resourceAdapterLib libs.netty

    testImplementation libs.javaee_api
    testImplementation libs.netty
    testImplementation libs.hamcrest_all
    // for spock
    testImplementation libs.groovy_all
    testImplementation libs.spock_core
    testImplementation libs.cglib_nodep
    testImplementation libs.objenesis
}

task rar(type: Jar) {
    archiveFileName = "casual-jca.rar"
    manifest {
        attributes 'Implementation-Title': 'Casual Resource Adapter with XA', 'Implementation-Version': '1.0', 'Specification-Version': '1.0'
    }
    archiveExtension = 'rar'
    from(configurations.resourceAdapterLib){
	into('lib')
    }
    into('') {
        from jar
    }
    into('') {
        from configurations.resourceAdapter
    }
    into('') {
        from sourceSets.main.resources
    }

}

artifacts.add( "resourceAdapter", rar )
